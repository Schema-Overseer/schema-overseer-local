[tool.poetry]
name = "schema-overseer-local"
version = "0.1.0"
description = "Helper to create a compatibility layer between inputs in different formats and other parts of application."
license = "MIT"
authors = ["Nik Sergievskii <nnonexistent@gmail.com>"]
readme = "README.md"
homepage = "https://github.com/Schema-Overseer/schema-overseer-local"
repository = "https://github.com/Schema-Overseer/schema-overseer-local"
packages = [{ include = "schema_overseer_local" }]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]


[tool.poetry.dependencies]
pydantic = "^2.5.3"
python = "^3.8"


[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
ruff = "^0.1.14"


[tool.poetry.group.test.dependencies]
pytest = "^7.4.3"


[tool.poetry.group.docs]
optional = true


[tool.poetry.group.docs.dependencies]
flask = "^3.0.1"
flasgger = "^0.9.7.1"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
filterwarnings = ["error"]


[tool.ruff]
line-length = 119
target-version = "py38"


[tool.ruff.lint]
extend-select = [
    "A",
    "ASYNC",
    "B",
    "BLE",
    "C",
    "E1",
    "EM",
    "ERA",
    "EXE",
    "FA",
    "FBT",
    "FLY",
    "G",
    "INP",
    "N",
    "PERF",
    "PGH",
    "PIE",
    "PT",
    "PTH",
    "RUF",
    "S",
    "SIM",
    "T10",
    "T20",
    "TRY",
    "UP",
    "W",
]
ignore = ["E731", "B011", "S101", "PT015"]


[tool.ruff.per-file-ignores]
"tutorial/**" = ["T20"] # disables checking for prints in tutorials


[tool.ruff.format]
quote-style = "single"


[tool.mypy]
plugins = ["pydantic.mypy"]
check_untyped_defs = true
ignore_missing_imports = true
python_version = "3.8"
strict = true
strict_equality = true
warn_redundant_casts = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
